import java.util.ArrayList;
import java.util.List;

// Soyut Sınıf
abstract class Urun {
    protected String isim; // Erişim belirleme: protected
    protected double fiyat;

    public Urun(String isim, double fiyat) {
        this.isim = isim;
        this.fiyat = fiyat;
    }

    public abstract void urunBilgisi(); // Soyut metot
}

// Kalıtım (Urun -> Telefon)
class Telefon extends Urun {
    protected int stok;

    public Telefon(String isim, double fiyat, int stok) {
        super(isim, fiyat);
        this.stok = stok;
    }

    @Override
    public void urunBilgisi() {
        System.out.println("Telefon Modeli: " + isim + ", Fiyat: " + fiyat + " TL, Stok: " + stok);
    }
}

// Kalıtım (Urun -> Aksesuar)
class Aksesuar extends Urun {
    public Aksesuar(String isim, double fiyat) {
        super(isim, fiyat);
    }

    @Override
    public void urunBilgisi() {
        System.out.println("Aksesuar: " + isim + ", Fiyat: " + fiyat + " TL");
    }
}

// Arayüz (SatisYapilabilir)
interface SatisYapilabilir {
    void satisYap(int adet) throws StokYetersizException;
}

// iPhone Sınıfı (Telefon'dan türetilir ve SatisYapilabilir'i uygular)
class iPhone extends Telefon implements SatisYapilabilir {
    public iPhone(String isim, double fiyat, int stok) {
        super(isim, fiyat, stok);
    }

    @Override
    public void satisYap(int adet) throws StokYetersizException {
        if (adet > stok) {
            throw new StokYetersizException("Yeterli stok bulunmuyor!");
        }
        stok -= adet;
        System.out.println(adet + " adet " + isim + " satıldı. Kalan stok: " + stok);
    }

    // Fazladan yükleme (Overloading) - Kampanyalı satış
    public void satisYap(String kampanyaKodu, int adet) throws StokYetersizException {
        if (adet > stok) {
            throw new StokYetersizException("Yeterli stok bulunmuyor!");
        }
        stok -= adet;
        System.out.println(adet + " adet " + isim + " " + kampanyaKodu + " kampanyası ile satıldı.");
    }

    // Fazladan yükleme (Overloading) - İndirimli satış
    public void satisYap(int adet, double indirimOrani) throws StokYetersizException {
        if (adet > stok) {
            throw new StokYetersizException("Yeterli stok bulunmuyor!");
        }
        stok -= adet;
        double toplamFiyat = adet * fiyat * (1 - indirimOrani);
        System.out.println(adet + " adet " + isim + " indirimli olarak satıldı. Toplam: " + toplamFiyat + " TL");
    }
}

// Exception Sınıfları
class StokYetersizException extends Exception {
    public StokYetersizException(String mesaj) {
        super(mesaj);
    }
}

class GeçersizUrunException extends Exception {
    public GeçersizUrunException(String mesaj) {
        super(mesaj);
    }
}

// İç İçe Sınıf (Musteri -> Adres)
class Musteri {
    private String isim; // Erişim belirleme: private
    private Adres adres;

    public Musteri(String isim, String sehir, String sokak) {
        this.isim = isim;
        this.adres = new Adres(sehir, sokak);
    }

    public void musteriBilgisi() {
        System.out.println("Müşteri: " + isim);
        adres.adresBilgisi();
    }

    // İç sınıf
    class Adres {
        private String sehir;
        private String sokak;

        public Adres(String sehir, String sokak) {
            this.sehir = sehir;
            this.sokak = sokak;
        }

        public void adresBilgisi() {
            System.out.println("Adres: " + sehir + ", " + sokak);
        }
    }
}

// Ana sınıf
public class iPhoneSatisSistemi {
    public static void main(String[] args) {
        // Ürün listesi
        List<Urun> urunler = new ArrayList<>();
        urunler.add(new iPhone("iPhone 14", 35000, 10));
        urunler.add(new iPhone("iPhone 14 Pro", 45000, 5));
        urunler.add(new Aksesuar("Kulaklık", 1500));
        urunler.add(new Aksesuar("Şarj Aleti", 1000));

        // Müşteri oluşturma
        Musteri musteri = new Musteri("Ali Veli", "İstanbul", "Taksim Sokak 5");

        // Ürünleri listeleme
        System.out.println("Mevcut Ürünler:");
        for (Urun urun : urunler) {
            urun.urunBilgisi();
        }

        // Satış işlemi
        try {
            System.out.println("\nSipariş işlemi başlıyor...");
            iPhone secilenUrun = (iPhone) urunler.get(0);
            secilenUrun.satisYap(2); // Normal satış
            secilenUrun.satisYap("KOD123", 1); // Kampanyalı satış
            secilenUrun.satisYap(1, 0.10); // İndirimli satış
        } catch (StokYetersizException e) {
            System.err.println("Hata: " + e.getMessage());
        } catch (ClassCastException e) {
            System.err.println("Hata: Yanlış ürün türü seçildi.");
        }

        // Müşteri bilgisi
        System.out.println("\nMüşteri Bilgisi:");
        musteri.musteriBilgisi();
    }
}
